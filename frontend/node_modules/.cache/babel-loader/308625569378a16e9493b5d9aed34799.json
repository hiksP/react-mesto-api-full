{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiksvalP\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Header } from './Header.js';\nimport { Main } from './Main.js';\nimport { Footer } from './Footer.js';\nimport { ImagePopup } from './ImagePopup.js';\nimport { api } from \"../utils/Api.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { EditProfilePopup } from './EditProfilePopup.js';\nimport { EditAvatarPopup } from './EditAvatarPopup.js';\nimport { AddPlacePopup } from './AddPlacePopup.js';\nimport { Card } from \"./Card.js\";\nimport { Login } from \"./Login.js\";\nimport { Register } from \"./Register.js\";\nimport { InfoToolTip } from \"./InfoToolTip\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./ProtectedRoute.js\";\nimport { authApi } from '../utils/authApi.js';\nimport Success from \"../images/RegisterSuccess.svg\";\nimport Fail from \"../images/RegisterFail.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const navigate = useNavigate(); // стейт перменные попапов\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isInfoToolTipucess, setInfoToolTipOpen] = useState({\n    opened: false,\n    status: false\n  });\n  const [selectedCard, setSelectedCard] = useState(null); // стейт карточек\n\n  const [cards, setCards] = useState([]); // стейт логина\n\n  const [loggedIn, setLoggedIn] = useState(false); // стейт почты пользователя\n\n  const [email, setEmail] = useState(''); // стейт с данными пользователя \n\n  const [currentUser, setCurrentUser] = useState({}); // проверка на наличие токена в хранилище браузера\n\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n\n    if (jwt) {\n      authApi.tokenCheck(jwt).then(res => {\n        setLoggedIn(true);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, []); // установка данных текущего пользователя \n\n  useEffect(() => {\n    if (loggedIn) {\n      api.getUserInfo().then(res => {\n        setCurrentUser(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [loggedIn]); // обработчики открытия попапов\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  }; // хендлеры обновления данных пользователя \n\n\n  const handleUpdateUser = user => {\n    api.editInfo(user.name, user.about).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  };\n\n  const handleUpdateAvatar = input => {\n    api.changeAvatar(input.avatar).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  }; // хэндлер выхода из профиля\n\n\n  const handleLogOut = () => {\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    navigate('/sign-in');\n  }; // реализация логина + сохранение токена\n\n\n  const signIn = input => {\n    authApi.signIn(input.email, input.password).then(res => {\n      localStorage.setItem(\"jwt\", res.token);\n      setEmail(input.email);\n      setLoggedIn(true);\n      navigate('/');\n    }).catch(err => {\n      console.log(err);\n      setInfoToolTipOpen({\n        opened: true,\n        status: false\n      });\n    });\n  }; // передача данных для рпегистрации\n\n\n  const handleRegister = input => {\n    authApi.signUp(input.email, input.password).then(res => {\n      setInfoToolTipOpen({\n        opened: true,\n        status: true\n      });\n      navigate('/sign-in');\n    }).catch(err => {\n      setInfoToolTipOpen({\n        opened: true,\n        status: false\n      });\n    });\n  }; // закрытие всех попапов\n\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setInfoToolTipOpen({\n      opened: false,\n      status: false\n    });\n  }; // загрузка карточек\n\n\n  useEffect(() => {\n    if (loggedIn) {\n      api.getCards().then(res => {\n        setCards(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, []); // функция лайка карточки\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  } // функция удаления карточки\n\n\n  function handleCardDelete(card) {\n    // проверяем являемся ли мы владельцем карточки\n    const isMine = card.owner._id === currentUser._id; // отправляем запрос на удаление карточки\n\n    api.deleteCard(card._id, isMine).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    });\n  } // функция добавления карточки\n\n\n  function handleAddPlaceSubmit(newCard) {\n    api.uploadCard(newCard.placeName, newCard.placeUrl).then(res => {\n      setCards([res, ...cards]);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  } // обработка массива с карточками\n\n\n  const sectionWithCards = () => {\n    if (cards.length > 0) {\n      return cards.map(cardInfo => /*#__PURE__*/_jsxDEV(Card, {\n        card: cardInfo,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        selectedCard: handleCardClick\n      }, cardInfo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 10\n      }, this));\n    }\n  }; // вся разметка сайта\n\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page__size\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onCLick: handleLogOut,\n          email: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: signIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              login: loggedIn,\n              onRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              loggedIn: loggedIn,\n              component: /*#__PURE__*/_jsxDEV(Main, {\n                cards: sectionWithCards(),\n                onEditAvatar: handleEditAvatarClick,\n                onEditProfile: handleEditProfileClick,\n                onAddPlace: handleAddPlaceClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          onClose: closeAllPopups,\n          card: selectedCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          image: Success,\n          isOpen: isInfoToolTipucess,\n          onClose: closeAllPopups,\n          message: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"iV/jqycBAXFQanmypZ9/McpLD1g=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hiksvalP/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Card","Login","Register","InfoToolTip","Routes","Route","useNavigate","ProtectedRoute","authApi","Success","Fail","App","navigate","isEditProfilePopupOpen","setEditProfilePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isInfoToolTipucess","setInfoToolTipOpen","opened","status","selectedCard","setSelectedCard","cards","setCards","loggedIn","setLoggedIn","email","setEmail","currentUser","setCurrentUser","jwt","localStorage","getItem","tokenCheck","then","res","catch","err","console","log","getUserInfo","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleUpdateUser","user","editInfo","name","about","closeAllPopups","handleUpdateAvatar","input","changeAvatar","avatar","handleLogOut","removeItem","signIn","password","setItem","token","handleRegister","signUp","getCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","isMine","owner","deleteCard","filter","handleAddPlaceSubmit","uploadCard","placeName","placeUrl","sectionWithCards","length","cardInfo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Header} from './Header.js';\r\nimport {Main} from './Main.js';\r\nimport {Footer} from './Footer.js';\r\nimport {ImagePopup} from './ImagePopup.js';\r\nimport {api} from \"../utils/Api.js\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport { EditProfilePopup } from './EditProfilePopup.js';\r\nimport { EditAvatarPopup } from './EditAvatarPopup.js';\r\nimport { AddPlacePopup } from './AddPlacePopup.js';\r\nimport {Card} from \"./Card.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Register } from \"./Register.js\";\r\nimport { InfoToolTip } from \"./InfoToolTip\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport {ProtectedRoute} from \"./ProtectedRoute.js\"\r\nimport { authApi } from '../utils/authApi.js';\r\nimport Success from \"../images/RegisterSuccess.svg\";\r\nimport Fail from \"../images/RegisterFail.svg\";\r\n\r\nfunction App() {\r\n\r\nconst navigate = useNavigate();\r\n\r\n// стейт перменные попапов\r\n  \r\nconst [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\nconst [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\nconst [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\nconst [isInfoToolTipucess, setInfoToolTipOpen] = useState({opened: false, status: false});\r\nconst [selectedCard, setSelectedCard] = useState(null);\r\n\r\n// стейт карточек\r\n\r\nconst [cards, setCards] = useState([]);\r\n\r\n// стейт логина\r\n\r\nconst [loggedIn, setLoggedIn] = useState(false)\r\n\r\n// стейт почты пользователя\r\nconst [email, setEmail] = useState('');\r\n\r\n// стейт с данными пользователя \r\n\r\nconst [currentUser, setCurrentUser] = useState({})\r\n\r\n// проверка на наличие токена в хранилище браузера\r\nuseEffect(() => {\r\n    const jwt = localStorage.getItem(\"jwt\")\r\n    if(jwt) {\r\n      authApi.tokenCheck(jwt)\r\n      .then((res) => {\r\n        setLoggedIn(true)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n    }\r\n}, [])\r\n\r\n\r\n// установка данных текущего пользователя \r\nuseEffect(() => {\r\n  if(loggedIn) {\r\n    api.getUserInfo()\r\n    .then(res => {\r\n      setCurrentUser(res)\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n},[loggedIn])\r\n\r\n// обработчики открытия попапов\r\n\r\nconst handleEditAvatarClick = () => {\r\n  setEditAvatarPopupOpen(true);\r\n}\r\n\r\nconst handleEditProfileClick = () => {\r\n  setEditProfilePopupOpen(true);\r\n}\r\n\r\nconst handleAddPlaceClick = () => {\r\n  setAddPlacePopupOpen(true);\r\n}\r\n\r\nconst handleCardClick  = (card) => {\r\n  setSelectedCard(card);\r\n}\r\n\r\n// хендлеры обновления данных пользователя \r\n\r\n const handleUpdateUser = (user) => {\r\n  api.editInfo(user.name, user.about)\r\n  .then(res => {\r\n    setCurrentUser(res)\r\n  })\r\n  .catch(err => {\r\n    console.log(err)\r\n  })\r\n  closeAllPopups();\r\n }\r\n\r\n const handleUpdateAvatar = (input) => {\r\n    api.changeAvatar(input.avatar)\r\n    .then(res => {\r\n      setCurrentUser(res)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    closeAllPopups();\r\n } \r\n\r\n // хэндлер выхода из профиля\r\n\r\n const handleLogOut = () => {\r\n  localStorage.removeItem(\"jwt\");\r\n  setLoggedIn(false);\r\n  navigate('/sign-in');\r\n }\r\n\r\n // реализация логина + сохранение токена\r\n  const signIn = (input) => {\r\n    authApi.signIn(input.email, input.password)\r\n    .then((res) => {\r\n      localStorage.setItem(\"jwt\", res.token);\r\n      setEmail(input.email);\r\n      setLoggedIn(true);\r\n      navigate('/');\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      setInfoToolTipOpen({opened: true, status: false});\r\n    })\r\n  }\r\n\r\n  // передача данных для рпегистрации\r\n  const handleRegister = (input) => {\r\n    authApi.signUp(input.email, input.password)\r\n    .then((res) => {\r\n      setInfoToolTipOpen({opened: true, status: true});\r\n      navigate('/sign-in');\r\n    })\r\n    .catch((err) => {\r\n      setInfoToolTipOpen({opened: true, status: false});\r\n    })\r\n  }\r\n\r\n// закрытие всех попапов\r\n\r\nconst closeAllPopups = () => {\r\n    setEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard(null);\r\n    setInfoToolTipOpen({opened: false, status: false});\r\n}\r\n\r\n  // загрузка карточек\r\n\r\n  useEffect(() => {\r\n    if(loggedIn) {\r\n      api.getCards()\r\n      .then(res => {\r\n        setCards(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n    // функция лайка карточки\r\n\r\n    function handleCardLike(card) {\r\n      // Снова проверяем, есть ли уже лайк на этой карточке\r\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n      \r\n      // Отправляем запрос в API и получаем обновлённые данные карточки\r\n      api.changeLikeCardStatus(card._id, isLiked)\r\n      .then((newCard) => {\r\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n      });\r\n  }  \r\n\r\n    // функция удаления карточки\r\n\r\n    function handleCardDelete(card) {\r\n      // проверяем являемся ли мы владельцем карточки\r\n      const isMine = card.owner._id === currentUser._id;\r\n  \r\n      // отправляем запрос на удаление карточки\r\n      api.deleteCard(card._id, isMine)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card._id));\r\n      })\r\n    }\r\n\r\n    // функция добавления карточки\r\n\r\n    function handleAddPlaceSubmit(newCard) {\r\n      api.uploadCard(newCard.placeName, newCard.placeUrl)\r\n      .then((res) => {\r\n        setCards([res, ...cards]);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n      closeAllPopups();\r\n    }\r\n\r\n  // обработка массива с карточками\r\n\r\n  const sectionWithCards = () => {\r\n    if (cards.length > 0) {\r\n      return cards.map((cardInfo) => (\r\n         <Card card={cardInfo} onCardLike={handleCardLike} onCardDelete={handleCardDelete} key={cardInfo._id} selectedCard={handleCardClick} />\r\n      ));\r\n    }\r\n  };\r\n\r\n\r\n// вся разметка сайта\r\n\r\n  return (\r\n  <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"page\">\r\n      <div className=\"page__size\">\r\n      <Header\r\n      onCLick={handleLogOut}\r\n      email={email} />\r\n        <Routes>\r\n          <Route path=\"/sign-in\" element={<Login\r\n            onLogin={signIn}/>} />\r\n          <Route path=\"/sign-up\" element={<Register\r\n            login={loggedIn}\r\n            onRegister={handleRegister}/>} />\r\n          <Route path=\"/\" element={\r\n            <ProtectedRoute\r\n              loggedIn={loggedIn}\r\n              component={\r\n              <Main\r\n              cards={sectionWithCards()}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick} />}\r\n            />} \r\n          />\r\n        </Routes>\r\n        <Footer />\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n        <ImagePopup\r\n          onClose={closeAllPopups}\r\n          card={selectedCard} />\r\n        <InfoToolTip image={Success} isOpen={isInfoToolTipucess} onClose={closeAllPopups} message=\"Вы успешно зарегистрировались!\" />\r\n        {/* <InfoToolTip image={Fail} isOpen={isInfoToolTipFailOpen} onClose={closeAllPopups} message=\"Что-то пошло не так! Попробуйте ещё раз.\" /> */}\r\n    </div>\r\n  </div>\r\n</CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}