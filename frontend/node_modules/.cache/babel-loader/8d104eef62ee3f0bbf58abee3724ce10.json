{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiksvalP\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js'; // создание экземляра карточки\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Card(_ref) {\n  _s();\n\n  let {\n    card,\n    selectedCard,\n    onCardLike,\n    onCardDelete\n  } = _ref;\n  // подписка на контекст с пользователем \n  const currentUser = React.useContext(CurrentUserContext); // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = card.owner._id === currentUser._id;\n  console.log('cardowner = ' + card.owner._id + ' current user ' + currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = isOwn ? 'elements__delete-button' : 'elements__delete-button_inactive'; // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  console.log(isLiked); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = isLiked ? 'elements__like-button elements__like-button_active' : 'elements__like-button'; // функции по клику на карточку\n\n  const handleLike = () => {\n    onCardLike(card);\n  };\n\n  const handleOpenCardPopup = () => {\n    selectedCard(card);\n  };\n\n  const handleDeleteCard = () => {\n    onCardDelete(card);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"elements__box\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: cardDeleteButtonClassName,\n      onClick: handleDeleteCard,\n      type: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"elements__image\",\n      onClick: handleOpenCardPopup,\n      src: card.link,\n      alt: card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"elements__name-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"elements__title\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"elements__like\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cardLikeButtonClassName,\n          onClick: handleLike,\n          type: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"elements__likes-count\",\n          children: card.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/hiksvalP/react-mesto-api-full/frontend/src/components/Card.js"],"names":["React","CurrentUserContext","Card","card","selectedCard","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","console","log","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleLike","handleOpenCardPopup","handleDeleteCard","link","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,mCAAnC,C,CAEA;;;AACA,OAAO,SAASC,IAAT,OAA8D;AAAA;;AAAA,MAAhD;AAACC,IAAAA,IAAD;AAAOC,IAAAA,YAAP;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA;AAAjC,GAAgD;AAEjE;AAEA,QAAMC,WAAW,GAAGP,KAAK,CAACQ,UAAN,CAAiBP,kBAAjB,CAApB,CAJiE,CAMjE;;AACA,QAAMQ,KAAK,GAAGN,IAAI,CAACO,KAAL,CAAWC,GAAX,KAAmBJ,WAAW,CAACI,GAA7C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBV,IAAI,CAACO,KAAL,CAAWC,GAA5B,GAAkC,gBAAlC,GAAqDJ,WAAW,CAACI,GAA7E,EARiE,CAUjE;;AACA,QAAMG,yBAAyB,GAAIL,KAAK,GAAG,yBAAH,GAA+B,kCAAvE,CAXiE,CAcjE;;AACA,QAAMM,OAAO,GAAGZ,IAAI,CAACa,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACP,GAAF,KAAUJ,WAAW,CAACI,GAA3C,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ,EAhBiE,CAkBjE;;AACA,QAAMI,uBAAuB,GAAGJ,OAAO,GAAG,oDAAH,GAA0D,uBAAjG,CAnBiE,CAqBjE;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACrBf,IAAAA,UAAU,CAACF,IAAD,CAAV;AACH,GAFD;;AAIA,QAAMkB,mBAAmB,GAAG,MAAM;AAC9BjB,IAAAA,YAAY,CAACD,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMmB,gBAAgB,GAAG,MAAM;AAC3BhB,IAAAA,YAAY,CAACH,IAAD,CAAZ;AACH,GAFD;;AAKA,sBACQ;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAEW,yBAAnB;AAA8C,MAAA,OAAO,EAAEQ,gBAAvD;AAAyE,MAAA,IAAI,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,OAAO,EAAED,mBAA1C;AAA+D,MAAA,GAAG,EAAElB,IAAI,CAACoB,IAAzE;AAA+E,MAAA,GAAG,EAAEpB,IAAI,CAACqB;AAAzF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCrB,IAAI,CAACqB;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAEL,uBAAnB;AAA4C,UAAA,OAAO,EAAEC,UAArD;AAAiE,UAAA,IAAI,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsCjB,IAAI,CAACa,KAAL,CAAWS;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAaH;;GAjDevB,I;;KAAAA,I","sourcesContent":["import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\n// создание экземляра карточки\r\nexport function Card({card, selectedCard, onCardLike, onCardDelete}) {\r\n\r\n    // подписка на контекст с пользователем \r\n  \r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = card.owner._id === currentUser._id;\r\n    console.log('cardowner = ' + card.owner._id + ' current user ' + currentUser._id);\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName =  isOwn ? 'elements__delete-button' : 'elements__delete-button_inactive';\r\n    \r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    console.log(isLiked)\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = isLiked ? 'elements__like-button elements__like-button_active' : 'elements__like-button'\r\n\r\n    // функции по клику на карточку\r\n\r\n    const handleLike = () => {\r\n        onCardLike(card); \r\n    }\r\n\r\n    const handleOpenCardPopup = () => {\r\n        selectedCard(card);\r\n    }\r\n\r\n    const handleDeleteCard = () => {\r\n        onCardDelete(card);\r\n    }\r\n\r\n\r\n    return (\r\n            <li className=\"elements__box\">\r\n                <button className={cardDeleteButtonClassName} onClick={handleDeleteCard} type=\"button\"></button>\r\n                <img className=\"elements__image\" onClick={handleOpenCardPopup} src={card.link} alt={card.name}/>\r\n                <div className=\"elements__name-box\">\r\n                    <h2 className=\"elements__title\">{card.name}</h2>\r\n                    <div className=\"elements__like\">\r\n                        <button className={cardLikeButtonClassName} onClick={handleLike} type=\"button\"></button>\r\n                        <p className=\"elements__likes-count\">{card.likes.length}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}