{"ast":null,"code":"class AuthApi {\n  constructor(_ref) {\n    let {\n      baseUrl\n    } = _ref;\n    this._baseUrl = baseUrl;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n\n    return res.json();\n  } //регистрация\n\n\n  signUp(user) {\n    console.log(user.email);\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user.password, user.email)\n    }).then(res => this._getResponseData(res));\n  } // авторизация\n\n\n  signIn(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(this._getResponseData).then(data => {\n      localStorage.setItem('token', data.token);\n    });\n  }\n\n  tokenCheck() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    }).then(this._getResponseData);\n  }\n\n}\n\nexport const authApi = new AuthApi({\n  baseUrl: 'https://auth.nomoreparties.co'\n});","map":{"version":3,"sources":["C:/Users/hiksvalP/react-mesto-auth/src/utils/authApi.js"],"names":["AuthApi","constructor","baseUrl","_baseUrl","_getResponseData","res","ok","Promise","reject","status","json","signUp","user","console","log","email","fetch","method","headers","body","JSON","stringify","password","then","signIn","data","localStorage","setItem","token","tokenCheck","getItem","authApi"],"mappings":"AAAA,MAAMA,OAAN,CAAc;AACVC,EAAAA,WAAW,OAAY;AAAA,QAAX;AAACC,MAAAA;AAAD,KAAW;AACnB,SAAKC,QAAL,GAAgBD,OAAhB;AACH;;AAEDE,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AAClB,QAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,aAAOC,OAAO,CAACC,MAAR,CAAgB,UAASH,GAAG,CAACI,MAAO,EAApC,CAAP;AACH;;AACD,WAAOJ,GAAG,CAACK,IAAJ,EAAP;AACH,GAVS,CAYV;;;AACAC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACA,WAAOC,KAAK,CAAE,GAAE,KAAKb,QAAS,SAAlB,EAA4B;AACpCc,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAI,CAACU,QAApB,EAA8BV,IAAI,CAACG,KAAnC;AAL8B,KAA5B,CAAL,CAMJQ,IANI,CAMElB,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CANV,CAAP;AAOH,GAtBS,CAwBV;;;AACAmB,EAAAA,MAAM,QAAoB;AAAA,QAAnB;AAACT,MAAAA,KAAD;AAAQO,MAAAA;AAAR,KAAmB;AACtB,WAAON,KAAK,CAAE,GAAE,KAAKb,QAAS,SAAlB,EAA4B;AACpCc,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,QAAAA,QAAD;AAAWP,QAAAA;AAAX,OAAf;AAL8B,KAA5B,CAAL,CAMHQ,IANG,CAME,KAAKnB,gBANP,EAOFmB,IAPE,CAOIE,IAAD,IAAU;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,KAAnC;AACH,KATE,CAAP;AAUH;;AAEDC,EAAAA,UAAU,GAAG;AACT,WAAOb,KAAK,CAAE,GAAE,KAAKb,QAAS,WAAlB,EAA8B;AACtCc,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAmB,UAASQ,YAAY,CAACI,OAAb,CAAqB,KAArB,CAA4B;AAFnD;AAF6B,KAA9B,CAAL,CAMHP,IANG,CAME,KAAKnB,gBANP,CAAP;AAOH;;AA9CS;;AAmDd,OAAO,MAAM2B,OAAO,GAAG,IAAI/B,OAAJ,CAAY;AAC/BE,EAAAA,OAAO,EAAE;AADsB,CAAZ,CAAhB","sourcesContent":["class AuthApi {\r\n    constructor({baseUrl}) {\r\n        this._baseUrl = baseUrl;\r\n    }\r\n\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка ${res.status}`) \r\n        }\r\n        return res.json();\r\n    } \r\n\r\n    //регистрация\r\n    signUp(user) {\r\n        console.log(user.email)\r\n        return fetch(`${this._baseUrl}/signup`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            body: JSON.stringify(user.password, user.email)\r\n        }).then((res) => this._getResponseData(res))\r\n    }\r\n\r\n    // авторизация\r\n    signIn({email, password}) {\r\n        return fetch(`${this._baseUrl}/signin`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            body: JSON.stringify({password, email})\r\n        }) .then(this._getResponseData)\r\n            .then((data) => {\r\n                localStorage.setItem('token', data.token);\r\n            } )\r\n    }\r\n\r\n    tokenCheck() {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\" : `Bearer ${localStorage.getItem(\"jwt\")}`\r\n            }\r\n        }) .then(this._getResponseData)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const authApi = new AuthApi({\r\n    baseUrl: 'https://auth.nomoreparties.co'\r\n})"]},"metadata":{},"sourceType":"module"}