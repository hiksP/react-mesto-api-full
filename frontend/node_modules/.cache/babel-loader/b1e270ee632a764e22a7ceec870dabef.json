{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiksvalP\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Header } from './Header.js';\nimport { Main } from './Main.js';\nimport { Footer } from './Footer.js';\nimport { ImagePopup } from './ImagePopup.js';\nimport { api } from \"../utils/Api.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { EditProfilePopup } from './EditProfilePopup.js';\nimport { EditAvatarPopup } from './EditAvatarPopup.js';\nimport { AddPlacePopup } from './AddPlacePopup.js';\nimport { Card } from \"./Card.js\";\nimport { Login } from \"./Login.js\";\nimport { Register } from \"./Register.js\";\nimport { InfoToolTip } from \"./InfoToolTip\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { ProtectedRoute } from \"./ProtectedRoute.js\";\nimport { authApi } from '../utils/authApi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // стейт перменные попапов\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null); // стейт карточек\n\n  const [cards, setCards] = useState([]); // стейт логина\n\n  const [loggedIn, setLoggedIn] = useState(false); // стейт с данными пользователя \n\n  const [currentUser, setCurrentUser] = useState({}); // получеение токена \n\n  useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    console.log(jwt);\n\n    if (jwt) {\n      setLoggedIn(true);\n    }\n  }, []); // установка данных текущего пользователя \n\n  useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // обработчики открытия попапов\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  }; // хендлеры обновления данных пользователя \n\n\n  const handleUpdateUser = user => {\n    api.editInfo(user.name, user.about).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  };\n\n  const handleUpdateAvatar = input => {\n    api.changeAvatar(input.avatar).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  }; // передача данных логина на сервер\n\n\n  const signIn = input => {\n    authApi.signIn(input.email, input.password).then(res => {\n      console.log(loggedIn);\n    });\n  }; // передача данных для рпегистрации\n\n\n  const handleRegister = input => {\n    authApi.signUp(input.email, input.password).then(res => {\n      console.log(res.status);\n    });\n  }; // закрытие всех попапов\n\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }; // загрузка карточек\n\n\n  useEffect(() => {\n    api.getCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // функция лайка карточки\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  } // функция удаления карточки\n\n\n  function handleCardDelete(card) {\n    // проверяем являемся ли мы владельцем карточки\n    const isMine = card.owner._id === currentUser._id; // отправляем запрос на удаление карточки\n\n    api.deleteCard(card._id, isMine).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    });\n  } // функция добавления карточки\n\n\n  function handleAddPlaceSubmit(newCard) {\n    api.uploadCard(newCard.placeName, newCard.placeUrl).then(res => {\n      setCards([res, ...cards]);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  } // обработка массива с карточками\n\n\n  const sectionWithCards = () => {\n    if (cards.length > 0) {\n      return cards.map(cardInfo => /*#__PURE__*/_jsxDEV(Card, {\n        card: cardInfo,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        selectedCard: handleCardClick\n      }, cardInfo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 10\n      }, this));\n    }\n  }; // вся разметка сайта\n\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page__size\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          text: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: signIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              loggedIn: loggedIn,\n              component: /*#__PURE__*/_jsxDEV(Main, {\n                cards: sectionWithCards(),\n                onEditAvatar: handleEditAvatarClick,\n                onEditProfile: handleEditProfileClick,\n                onAddPlace: handleAddPlaceClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          onClose: closeAllPopups,\n          card: selectedCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"yjq6NVY+xgLNqBjarh+wu/Ifn8A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hiksvalP/react-mesto-auth/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Card","Login","Register","InfoToolTip","Routes","Route","useNavigate","ProtectedRoute","authApi","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","cards","setCards","loggedIn","setLoggedIn","currentUser","setCurrentUser","jwt","localStorage","getItem","console","log","getUserInfo","then","res","catch","err","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleUpdateUser","user","editInfo","name","about","closeAllPopups","handleUpdateAvatar","input","changeAvatar","avatar","signIn","email","password","handleRegister","signUp","status","getCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","isMine","owner","deleteCard","filter","handleAddPlaceSubmit","uploadCard","placeName","placeUrl","sectionWithCards","length","cardInfo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Header} from './Header.js';\r\nimport {Main} from './Main.js';\r\nimport {Footer} from './Footer.js';\r\nimport {ImagePopup} from './ImagePopup.js';\r\nimport {api} from \"../utils/Api.js\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport { EditProfilePopup } from './EditProfilePopup.js';\r\nimport { EditAvatarPopup } from './EditAvatarPopup.js';\r\nimport { AddPlacePopup } from './AddPlacePopup.js';\r\nimport {Card} from \"./Card.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Register } from \"./Register.js\";\r\nimport { InfoToolTip } from \"./InfoToolTip\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport {ProtectedRoute} from \"./ProtectedRoute.js\"\r\nimport { authApi } from '../utils/authApi.js';\r\n\r\nfunction App() {\r\n// стейт перменные попапов\r\n  \r\nconst [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\nconst [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\nconst [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\nconst [selectedCard, setSelectedCard] = useState(null);\r\n\r\n// стейт карточек\r\n\r\nconst [cards, setCards] = useState([]);\r\n\r\n// стейт логина\r\n\r\nconst [loggedIn, setLoggedIn] = useState(false);\r\n\r\n// стейт с данными пользователя \r\n\r\nconst [currentUser, setCurrentUser] = useState({})\r\n\r\n// получеение токена \r\nuseEffect(() => {\r\n  const jwt = localStorage.getItem('jwt')\r\n  console.log(jwt);\r\n  if(jwt) {\r\n    setLoggedIn(true);\r\n  }\r\n},[])\r\n\r\n\r\n// установка данных текущего пользователя \r\nuseEffect(() => {\r\n  api.getUserInfo()\r\n  .then(res => {\r\n    setCurrentUser(res)\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  })\r\n},[])\r\n\r\n// обработчики открытия попапов\r\n\r\nconst handleEditAvatarClick = () => {\r\n  setEditAvatarPopupOpen(true);\r\n}\r\n\r\nconst handleEditProfileClick = () => {\r\n  setEditProfilePopupOpen(true);\r\n}\r\n\r\nconst handleAddPlaceClick = () => {\r\n  setAddPlacePopupOpen(true);\r\n}\r\n\r\nconst handleCardClick  = (card) => {\r\n  setSelectedCard(card);\r\n}\r\n\r\n// хендлеры обновления данных пользователя \r\n\r\n const handleUpdateUser = (user) => {\r\n  api.editInfo(user.name, user.about)\r\n  .then(res => {\r\n    setCurrentUser(res)\r\n  })\r\n  .catch(err => {\r\n    console.log(err)\r\n  })\r\n  closeAllPopups();\r\n }\r\n\r\n const handleUpdateAvatar = (input) => {\r\n    api.changeAvatar(input.avatar)\r\n    .then(res => {\r\n      setCurrentUser(res)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    closeAllPopups();\r\n } \r\n\r\n // передача данных логина на сервер\r\n  const signIn = (input) => {\r\n    authApi.signIn(input.email, input.password)\r\n    .then((res) => {\r\n      console.log(loggedIn)\r\n    })\r\n  }\r\n\r\n  // передача данных для рпегистрации\r\n  const handleRegister = (input) => {\r\n    authApi.signUp(input.email, input.password)\r\n    .then((res) => {\r\n      console.log(res.status);\r\n    })\r\n  }\r\n\r\n// закрытие всех попапов\r\n\r\nconst closeAllPopups = () => {\r\n    setEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard(null);\r\n}\r\n\r\n  // загрузка карточек\r\n\r\n  useEffect(() => {\r\n    api.getCards()\r\n    .then(res => {\r\n      setCards(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n    // функция лайка карточки\r\n\r\n    function handleCardLike(card) {\r\n      // Снова проверяем, есть ли уже лайк на этой карточке\r\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n      \r\n      // Отправляем запрос в API и получаем обновлённые данные карточки\r\n      api.changeLikeCardStatus(card._id, isLiked)\r\n      .then((newCard) => {\r\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n      });\r\n  }  \r\n\r\n    // функция удаления карточки\r\n\r\n    function handleCardDelete(card) {\r\n      // проверяем являемся ли мы владельцем карточки\r\n      const isMine = card.owner._id === currentUser._id;\r\n  \r\n      // отправляем запрос на удаление карточки\r\n      api.deleteCard(card._id, isMine)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card._id));\r\n      })\r\n    }\r\n\r\n    // функция добавления карточки\r\n\r\n    function handleAddPlaceSubmit(newCard) {\r\n      api.uploadCard(newCard.placeName, newCard.placeUrl)\r\n      .then((res) => {\r\n        setCards([res, ...cards]);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n      closeAllPopups();\r\n    }\r\n\r\n  // обработка массива с карточками\r\n\r\n  const sectionWithCards = () => {\r\n    if (cards.length > 0) {\r\n      return cards.map((cardInfo) => (\r\n         <Card card={cardInfo} onCardLike={handleCardLike} onCardDelete={handleCardDelete} key={cardInfo._id} selectedCard={handleCardClick} />\r\n      ));\r\n    }\r\n  };\r\n\r\n\r\n// вся разметка сайта\r\n\r\n  return (\r\n  <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"page\">\r\n      <div className=\"page__size\">\r\n      <Header\r\n      text=\"\"/>\r\n        <Routes>\r\n          <Route path=\"/sign-in\" element={<Login\r\n            onLogin={signIn}/>} />\r\n          <Route path=\"/sign-up\" element={<Register\r\n            onRegister={handleRegister}/>} />\r\n          <Route path=\"/\" element={\r\n            <ProtectedRoute\r\n              loggedIn={loggedIn}\r\n              component={\r\n              <Main\r\n              cards={sectionWithCards()}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick} />}\r\n            />} \r\n          />\r\n        </Routes>\r\n        <Footer />\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n        <ImagePopup\r\n          onClose={closeAllPopups}\r\n          card={selectedCard} />\r\n    </div>\r\n  </div>\r\n</CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}