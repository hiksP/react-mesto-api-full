{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiksvalP\\\\mesto-react\\\\mesto-react\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport defaultAvatar from \"../images/ava.jpg\";\nimport { api } from \"../utils/Api.js\";\nimport { Card } from \"./Card.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Main(_ref) {\n  _s();\n\n  let {\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick\n  } = _ref;\n  // подписка на контекст с текущим пользователем \n  const currentUser = React.useContext(CurrentUserContext); // карточки\n\n  const [cards, setCards] = useState([]); // загрузка карточек\n\n  useEffect(() => {\n    api.getCards().then(res => {\n      console.log(res);\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // обработка массива с карточками\n\n  const sectionWithCards = () => {\n    if (cards.length > 0) {\n      return cards.map(cardInfo => /*#__PURE__*/_jsxDEV(Card, {\n        card: cardInfo,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        selectedCard: onCardClick\n      }, cardInfo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this));\n    }\n  }; // функция лайка карточки\n\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  } // функция удаления карточки\n\n\n  function handleCardDelete(card) {\n    // проверяем являемся ли мы владельцем карточки\n    const isMine = card.owner._id === currentUser._id; // отправляем запрос на удаление карточки\n\n    api.deleteCard(card._id, isMine).then(() => {\n      setCards(state => state.filter(c => c._id != card._id));\n    });\n  } // разметка\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"profile__avatar-hover\",\n        href: \"#\",\n        onClick: onEditAvatar,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__avatar\",\n          src: currentUser.avatar,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440 \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"profile__name\",\n          children: currentUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__edit-button\",\n          type: \"button\",\n          onClick: onEditProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__status\",\n          children: currentUser.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"elements__list\",\n        children: sectionWithCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"xialjJtjpodxuq9uLrhXqvEdCwA=\");\n\n_c = Main;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/hiksvalP/mesto-react/mesto-react/src/components/Main.js"],"names":["React","useEffect","useState","defaultAvatar","api","Card","CurrentUserContext","Main","onEditAvatar","onEditProfile","onAddPlace","onCardClick","currentUser","useContext","cards","setCards","getCards","then","res","console","log","catch","err","sectionWithCards","length","map","cardInfo","handleCardLike","handleCardDelete","_id","card","isLiked","likes","some","i","changeLikeCardStatus","newCard","state","c","isMine","owner","deleteCard","filter","avatar","name","about"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport defaultAvatar from \"../images/ava.jpg\";\r\nimport {api} from \"../utils/Api.js\";\r\nimport {Card} from \"./Card.js\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nexport function Main({onEditAvatar, onEditProfile, onAddPlace, onCardClick}) {\r\n\r\n  // подписка на контекст с текущим пользователем \r\n  \r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  // карточки\r\n\r\n  const [cards, setCards] = useState([]);\r\n\r\n  // загрузка карточек\r\n\r\n  useEffect(() => {\r\n    api.getCards()\r\n    .then(res => {\r\n      console.log(res);\r\n      setCards(res);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  // обработка массива с карточками\r\n\r\n  const sectionWithCards = () => {\r\n    if (cards.length > 0) {\r\n      return cards.map((cardInfo) => (\r\n         <Card card={cardInfo} onCardLike={handleCardLike} onCardDelete={handleCardDelete} key={cardInfo._id} selectedCard={onCardClick} />\r\n      ));\r\n    }\r\n  };\r\n  \r\n  // функция лайка карточки\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    \r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, isLiked)\r\n    .then((newCard) => {\r\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n    });\r\n}\r\n\r\n  // функция удаления карточки\r\n\r\n  function handleCardDelete(card) {\r\n    // проверяем являемся ли мы владельцем карточки\r\n    const isMine = card.owner._id === currentUser._id;\r\n\r\n    // отправляем запрос на удаление карточки\r\n    api.deleteCard(card._id, isMine)\r\n    .then(() => {\r\n      setCards((state) => state.filter((c) => c._id != card._id));\r\n    })\r\n  }\r\n\r\n  // разметка\r\n    return(\r\n        <main>\r\n        <section className=\"profile\">\r\n          <a className=\"profile__avatar-hover\" href=\"#\" onClick={onEditAvatar}><img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар профиля\"/></a>\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button className=\"profile__edit-button\" type=\"button\" onClick={onEditProfile}></button>\r\n            <p className=\"profile__status\">{currentUser.about}</p>\r\n          </div>\r\n          <button className=\"profile__add-button\" type=\"button\" onClick={onAddPlace}></button>\r\n        </section>\r\n        <section className=\"elements\">\r\n          <ul className=\"elements__list\">\r\n            {sectionWithCards()}\r\n          </ul>\r\n        </section>\r\n        </main>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}