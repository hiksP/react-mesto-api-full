{"ast":null,"code":"import _classCallCheck from\"C:/Users/hiksvalP/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/hiksvalP/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var adress=_ref.adress,token=_ref.token;_classCallCheck(this,Api);this._adress=adress;this._token=token;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}return res.json();}// загрука информации пользователя\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._adress,\"/users/me\"),{headers:{authorization:this._token}}).then(this._getResponseData);}// загрузка карточек\n},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this._adress,\"/cards\"),{headers:{authorization:this._token}}).then(this._getResponseData);}// отправка информации о пользователе на сервер\n},{key:\"editInfo\",value:function editInfo(name,status){return fetch(\"\".concat(this._adress,\"/users/me\"),{method:\"PATCH\",headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:name,about:status})}).then(this._getResponseData);}// загрузка карточки на сервер\n},{key:\"uploadCard\",value:function uploadCard(cardName,cardLink){return fetch(\"\".concat(this._adress,\"/cards\"),{method:\"POST\",headers:{authorization:this._token,'Content-type':'application/json'},body:JSON.stringify({name:cardName,link:cardLink})}).then(this._getResponseData);}// удаление карточки\n},{key:\"deleteCard\",value:function deleteCard(cardId,isMine){if(isMine){return fetch(\"\".concat(this._adress,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:{authorization:this._token}}).then(this._getResponseData);}}// изменение лайка (добавление или удаление)\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return fetch(\"\".concat(this._adress,\"/cards/\").concat(cardId,\"/likes\"),{method:\"DELETE\",headers:{authorization:this._token}}).then(this._getResponseData);}else{return fetch(\"\".concat(this._adress,\"/cards/\").concat(cardId,\"/likes\"),{method:\"PUT\",headers:{authorization:this._token}}).then(this._getResponseData);}}// изминение аватарка пользователя\n},{key:\"changeAvatar\",value:function changeAvatar(link){return fetch(\"\".concat(this._adress,\"/users/me/avatar\"),{method:\"PATCH\",headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:link})}).then(this._getResponseData);}}]);return Api;}();// создание класса АПИ и его экспорт\nexport var api=new Api({adress:'https://mesto.nomoreparties.co/v1/cohort-35',token:'d4eb43b8-f03a-4178-a37e-1c688ba22106'});","map":{"version":3,"sources":["C:/Users/hiksvalP/react-mesto-auth/src/utils/Api.js"],"names":["Api","adress","token","_adress","_token","res","ok","Promise","reject","status","json","fetch","headers","authorization","then","_getResponseData","name","method","body","JSON","stringify","about","cardName","cardLink","link","cardId","isMine","isLiked","avatar","api"],"mappings":"iPAAMA,CAAAA,G,yBACF,kBAA6B,IAAhBC,CAAAA,MAAgB,MAAhBA,MAAgB,CAARC,KAAQ,MAARA,KAAQ,2BACzB,KAAKC,OAAL,CAAeF,MAAf,CACA,KAAKG,MAAL,CAAcF,KAAd,CACH,C,gDAGD,0BAAiBG,GAAjB,CAAsB,CAClB,GAAI,CAACA,GAAG,CAACC,EAAT,CAAa,CACT,MAAOC,CAAAA,OAAO,CAACC,MAAR,gDAAyBH,GAAG,CAACI,MAA7B,EAAP,CACH,CACD,MAAOJ,CAAAA,GAAG,CAACK,IAAJ,EAAP,CACH,CAED;2BAEA,sBAAc,CACV,MAAOC,CAAAA,KAAK,WAAI,KAAKR,OAAT,cAA6B,CACrCS,OAAO,CAAE,CACLC,aAAa,CAAE,KAAKT,MADf,CAD4B,CAA7B,CAAL,CAIHU,IAJG,CAIE,KAAKC,gBAJP,CAAP,CAKH,CAED;wBAEA,mBAAW,CACP,MAAOJ,CAAAA,KAAK,WAAI,KAAKR,OAAT,WAA0B,CAClCS,OAAO,CAAE,CACLC,aAAa,CAAE,KAAKT,MADf,CADyB,CAA1B,CAAL,CAIHU,IAJG,CAIE,KAAKC,gBAJP,CAAP,CAKH,CAED;wBAEA,kBAASC,IAAT,CAAeP,MAAf,CAAuB,CACnB,MAAOE,CAAAA,KAAK,WAAI,KAAKR,OAAT,cAA6B,CACrCc,MAAM,CAAE,OAD6B,CAErCL,OAAO,CAAE,CACLC,aAAa,CAAE,KAAKT,MADf,CAEL,eAAgB,kBAFX,CAF4B,CAMrCc,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBJ,IAAI,CAAEA,IADW,CAEjBK,KAAK,CAAEZ,MAFU,CAAf,CAN+B,CAA7B,CAAL,CAUHK,IAVG,CAUE,KAAKC,gBAVP,CAAP,CAWH,CAED;0BAEA,oBAAWO,QAAX,CAAqBC,QAArB,CAA+B,CAC3B,MAAOZ,CAAAA,KAAK,WAAI,KAAKR,OAAT,WAA0B,CAClCc,MAAM,CAAE,MAD0B,CAElCL,OAAO,CAAE,CACLC,aAAa,CAAE,KAAKT,MADf,CAEL,eAAgB,kBAFX,CAFyB,CAMlCc,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBJ,IAAI,CAAEM,QADW,CAEjBE,IAAI,CAAED,QAFW,CAAf,CAN4B,CAA1B,CAAL,CAUHT,IAVG,CAUE,KAAKC,gBAVP,CAAP,CAWH,CAED;0BAEA,oBAAWU,MAAX,CAAmBC,MAAnB,CAA2B,CACvB,GAAGA,MAAH,CAAW,CACH,MAAOf,CAAAA,KAAK,WAAI,KAAKR,OAAT,mBAA0BsB,MAA1B,EAAoC,CAChDR,MAAM,CAAE,QADwC,CAEhDL,OAAO,CAAE,CACLC,aAAa,CAAE,KAAKT,MADf,CAFuC,CAApC,CAAL,CAKPU,IALO,CAKF,KAAKC,gBALH,CAAP,CAMP,CACJ,CAED;oCACA,8BAAqBU,MAArB,CAA6BE,OAA7B,CAAsC,CAClC,GAAGA,OAAH,CAAY,CACR,MAAOhB,CAAAA,KAAK,WAAI,KAAKR,OAAT,mBAA0BsB,MAA1B,WAA0C,CAClDR,MAAM,CAAE,QAD0C,CAElDL,OAAO,CAAE,CACLC,aAAa,CAAE,KAAKT,MADf,CAFyC,CAA1C,CAAL,CAKHU,IALG,CAKE,KAAKC,gBALP,CAAP,CAMH,CAPD,IAOO,CACH,MAAOJ,CAAAA,KAAK,WAAI,KAAKR,OAAT,mBAA0BsB,MAA1B,WAA0C,CAClDR,MAAM,CAAE,KAD0C,CAElDL,OAAO,CAAE,CACLC,aAAa,CAAE,KAAKT,MADf,CAFyC,CAA1C,CAAL,CAKHU,IALG,CAKE,KAAKC,gBALP,CAAP,CAMH,CACJ,CAED;4BAEA,sBAAaS,IAAb,CAAmB,CACf,MAAOb,CAAAA,KAAK,WAAI,KAAKR,OAAT,qBAAoC,CAC5Cc,MAAM,CAAE,OADoC,CAE5CL,OAAO,CAAE,CACLC,aAAa,CAAE,KAAKT,MADf,CAEL,eAAgB,kBAFX,CAFmC,CAM5Cc,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBQ,MAAM,CAAEJ,IADS,CAAf,CANsC,CAApC,CAAL,CASHV,IATG,CASE,KAAKC,gBATP,CAAP,CAUH,C,mBAED;AAEJ,MAAO,IAAMc,CAAAA,GAAG,CAAG,GAAI7B,CAAAA,GAAJ,CAAQ,CACvBC,MAAM,CAAE,6CADe,CAEvBC,KAAK,CAAE,sCAFgB,CAAR,CAAZ","sourcesContent":["class Api {\r\n    constructor({adress, token}) {\r\n        this._adress = adress;\r\n        this._token = token;\r\n    }\r\n\r\n\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка ${res.status}`) \r\n        }\r\n        return res.json();\r\n    } \r\n\r\n    // загрука информации пользователя\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._adress}/users/me`, {\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        }) .then(this._getResponseData)\r\n    }\r\n\r\n    // загрузка карточек\r\n\r\n    getCards() {\r\n        return fetch(`${this._adress}/cards`, {\r\n            headers: {\r\n                authorization: this._token\r\n            }\r\n        }) .then(this._getResponseData)\r\n    }\r\n  \r\n    // отправка информации о пользователе на сервер\r\n\r\n    editInfo(name, status) {\r\n        return fetch(`${this._adress}/users/me`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: status\r\n            })\r\n        }) .then(this._getResponseData)\r\n    }\r\n\r\n    // загрузка карточки на сервер\r\n\r\n    uploadCard(cardName, cardLink) {\r\n        return fetch(`${this._adress}/cards`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: cardName,\r\n                link: cardLink\r\n            })\r\n        }) .then(this._getResponseData)\r\n    }\r\n\r\n    // удаление карточки\r\n\r\n    deleteCard(cardId, isMine) {\r\n        if(isMine) {\r\n                return fetch(`${this._adress}/cards/${cardId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    authorization: this._token,\r\n                }\r\n            }) .then(this._getResponseData)\r\n        }\r\n    }\r\n\r\n    // изменение лайка (добавление или удаление)\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        if(isLiked) {\r\n            return fetch(`${this._adress}/cards/${cardId}/likes`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    authorization: this._token,\r\n                }\r\n            }) .then(this._getResponseData)\r\n        } else {\r\n            return fetch(`${this._adress}/cards/${cardId}/likes`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    authorization: this._token,\r\n                }\r\n            }) .then(this._getResponseData)\r\n        }\r\n    } \r\n    \r\n    // изминение аватарка пользователя\r\n\r\n    changeAvatar(link) {\r\n        return fetch(`${this._adress}/users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: link\r\n            })\r\n        }) .then(this._getResponseData)\r\n    }\r\n}\r\n    // создание класса АПИ и его экспорт\r\n\r\nexport const api = new Api({\r\n    adress: 'https://mesto.nomoreparties.co/v1/cohort-35',\r\n    token: 'd4eb43b8-f03a-4178-a37e-1c688ba22106'\r\n})"]},"metadata":{},"sourceType":"module"}