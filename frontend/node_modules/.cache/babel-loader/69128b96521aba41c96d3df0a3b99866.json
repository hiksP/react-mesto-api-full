{"ast":null,"code":"import React from'react';import{CurrentUserContext}from'../contexts/CurrentUserContext.js';// создание экземляра карточки\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Card(_ref){var card=_ref.card,selectedCard=_ref.selectedCard,onCardLike=_ref.onCardLike,onCardDelete=_ref.onCardDelete;// подписка на контекст с пользователем \nvar currentUser=React.useContext(CurrentUserContext);// Определяем, являемся ли мы владельцем текущей карточки\nvar isOwn=card.owner._id===currentUser._id;// Создаём переменную, которую после зададим в `className` для кнопки удаления\nvar cardDeleteButtonClassName=isOwn?'elements__delete-button':'elements__delete-button_inactive';// Определяем, есть ли у карточки лайк, поставленный текущим пользователем\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});// Создаём переменную, которую после зададим в `className` для кнопки лайка\nvar cardLikeButtonClassName=isLiked?'elements__like-button elements__like-button_active':'elements__like-button';// функции по клику на карточку\nvar handleLike=function handleLike(){onCardLike(card);};var handleOpenCardPopup=function handleOpenCardPopup(){selectedCard(card);};var handleDeleteCard=function handleDeleteCard(){onCardDelete(card);};return/*#__PURE__*/_jsxs(\"li\",{className:\"elements__box\",children:[/*#__PURE__*/_jsx(\"button\",{className:cardDeleteButtonClassName,onClick:handleDeleteCard,type:\"button\"}),/*#__PURE__*/_jsx(\"img\",{className:\"elements__image\",onClick:handleOpenCardPopup,src:card.link,alt:card.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"elements__name-box\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"elements__title\",children:card.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"elements__like\",children:[/*#__PURE__*/_jsx(\"button\",{className:cardLikeButtonClassName,onClick:handleLike,type:\"button\"}),/*#__PURE__*/_jsx(\"p\",{className:\"elements__likes-count\",children:card.likes.length})]})]})]});}","map":{"version":3,"sources":["C:/Users/hiksvalP/react-mesto-auth/src/components/Card.js"],"names":["React","CurrentUserContext","Card","card","selectedCard","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleLike","handleOpenCardPopup","handleDeleteCard","link","name","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,KAAmC,mCAAnC,CAEA;wFACA,MAAO,SAASC,CAAAA,IAAT,MAA8D,IAA/CC,CAAAA,IAA+C,MAA/CA,IAA+C,CAAzCC,YAAyC,MAAzCA,YAAyC,CAA3BC,UAA2B,MAA3BA,UAA2B,CAAfC,YAAe,MAAfA,YAAe,CAEjE;AAEA,GAAMC,CAAAA,WAAW,CAAGP,KAAK,CAACQ,UAAN,CAAiBP,kBAAjB,CAApB,CAEA;AACA,GAAMQ,CAAAA,KAAK,CAAGN,IAAI,CAACO,KAAL,CAAWC,GAAX,GAAmBJ,WAAW,CAACI,GAA7C,CAEA;AACA,GAAMC,CAAAA,yBAAyB,CAAIH,KAAK,CAAG,yBAAH,CAA+B,kCAAvE,CAEA;AACA,GAAMI,CAAAA,OAAO,CAAGV,IAAI,CAACW,KAAL,CAAWC,IAAX,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACL,GAAF,GAAUJ,WAAW,CAACI,GAA1B,EAAjB,CAAhB,CAEA;AACA,GAAMM,CAAAA,uBAAuB,CAAGJ,OAAO,CAAG,oDAAH,CAA0D,uBAAjG,CAEA;AAEA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBb,UAAU,CAACF,IAAD,CAAV,CACH,CAFD,CAIA,GAAMgB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9Bf,YAAY,CAACD,IAAD,CAAZ,CACH,CAFD,CAIA,GAAMiB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3Bd,YAAY,CAACH,IAAD,CAAZ,CACH,CAFD,CAKA,mBACQ,YAAI,SAAS,CAAC,eAAd,wBACI,eAAQ,SAAS,CAAES,yBAAnB,CAA8C,OAAO,CAAEQ,gBAAvD,CAAyE,IAAI,CAAC,QAA9E,EADJ,cAEI,YAAK,SAAS,CAAC,iBAAf,CAAiC,OAAO,CAAED,mBAA1C,CAA+D,GAAG,CAAEhB,IAAI,CAACkB,IAAzE,CAA+E,GAAG,CAAElB,IAAI,CAACmB,IAAzF,EAFJ,cAGI,aAAK,SAAS,CAAC,oBAAf,wBACI,WAAI,SAAS,CAAC,iBAAd,UAAiCnB,IAAI,CAACmB,IAAtC,EADJ,cAEI,aAAK,SAAS,CAAC,gBAAf,wBACI,eAAQ,SAAS,CAAEL,uBAAnB,CAA4C,OAAO,CAAEC,UAArD,CAAiE,IAAI,CAAC,QAAtE,EADJ,cAEI,UAAG,SAAS,CAAC,uBAAb,UAAsCf,IAAI,CAACW,KAAL,CAAWS,MAAjD,EAFJ,GAFJ,GAHJ,GADR,CAaH","sourcesContent":["import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\n// создание экземляра карточки\r\nexport function Card({card, selectedCard, onCardLike, onCardDelete}) {\r\n\r\n    // подписка на контекст с пользователем \r\n  \r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName =  isOwn ? 'elements__delete-button' : 'elements__delete-button_inactive'\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = isLiked ? 'elements__like-button elements__like-button_active' : 'elements__like-button'\r\n\r\n    // функции по клику на карточку\r\n\r\n    const handleLike = () => {\r\n        onCardLike(card); \r\n    }\r\n\r\n    const handleOpenCardPopup = () => {\r\n        selectedCard(card);\r\n    }\r\n\r\n    const handleDeleteCard = () => {\r\n        onCardDelete(card);\r\n    }\r\n\r\n\r\n    return (\r\n            <li className=\"elements__box\">\r\n                <button className={cardDeleteButtonClassName} onClick={handleDeleteCard} type=\"button\"></button>\r\n                <img className=\"elements__image\" onClick={handleOpenCardPopup} src={card.link} alt={card.name}/>\r\n                <div className=\"elements__name-box\">\r\n                    <h2 className=\"elements__title\">{card.name}</h2>\r\n                    <div className=\"elements__like\">\r\n                        <button className={cardLikeButtonClassName} onClick={handleLike} type=\"button\"></button>\r\n                        <p className=\"elements__likes-count\">{card.likes.length}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}