{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hiksvalP\\\\mesto-react\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Header } from './Header.js';\nimport { Main } from './Main.js';\nimport { PopupWithForm } from './PopupWithForm.js';\nimport { Footer } from './Footer.js';\nimport { ImagePopup } from './ImagePopup.js';\nimport { api } from \"../utils/Api.js\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { EditProfilePopup } from './EditProfilePopup.js';\nimport { EditAvatarPopup } from './EditAvatarPopup.js';\nimport { Card } from \"./Card.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // стейт перменные попапов\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null); // стейт с данными пользователя \n\n  const [currentUser, setCurrentUser] = useState({}); // установка данных текущего пользователя \n\n  useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [isEditProfilePopupOpen]); // обработчики открытия попапов\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  }; // хендлеры обновления данных пользователя \n\n\n  const handleUpdateUser = user => {\n    api.editInfo(user.name, user.about).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  };\n\n  const handleUpdateAvatar = input => {\n    api.changeAvatar(input.avatar).then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    closeAllPopups();\n  }; // закрытие всех попапов\n\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }; // закрытие попапов по эскейпу\n\n\n  useEffect(() => {\n    const handleEscClose = e => {\n      if (e.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscClose);\n    return () => document.removeEventListener(\"keydown\", handleEscClose);\n  }, []); // карточки\n\n  const [cards, setCards] = useState([]); // загрузка карточек\n\n  useEffect(() => {\n    api.getCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // обработка массива с карточками\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  const sectionWithCards = () => {\n    if (cards.length > 0) {\n      return cards.map(cardInfo => /*#__PURE__*/_jsxDEV(Card, {\n        card: cardInfo,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        selectedCard: onCardClick\n      }, cardInfo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this));\n    }\n  }; // функция лайка карточки\n  // функция удаления карточки\n\n\n  function handleCardDelete(card) {\n    // проверяем являемся ли мы владельцем карточки\n    const isMine = card.owner._id === currentUser._id; // отправляем запрос на удаление карточки\n\n    api.deleteCard(card._id, isMine).then(() => {\n      setCards(state => state.filter(c => c._id != card._id));\n    });\n  } // вся разметка сайта\n\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page__size\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"add\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"popup__list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"popup__list-element\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"popup__data-box\",\n                  name: \"place-name\",\n                  required: true,\n                  minLength: \"2\",\n                  maxLength: \"30\",\n                  placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"popup__input-error\",\n                  id: \"place-name-error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"popup__list-element\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"url\",\n                  className: \"popup__data-box\",\n                  name: \"place-link\",\n                  required: true,\n                  placeholder: \"\\u0421\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"popup__input-error\",\n                  id: \"place-link-error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 11\n            }, this)\n          }, void 0, false),\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          onClose: closeAllPopups,\n          card: selectedCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"Oc3rUtGVyre9irfOF/cQlkr2cu8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hiksvalP/mesto-react/mesto-react/src/components/App.js"],"names":["React","useState","useEffect","Header","Main","PopupWithForm","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","Card","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","getUserInfo","then","res","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleUpdateUser","user","editInfo","name","about","closeAllPopups","handleUpdateAvatar","input","changeAvatar","avatar","handleEscClose","e","key","document","addEventListener","removeEventListener","cards","setCards","getCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","sectionWithCards","length","cardInfo","handleCardDelete","onCardClick","isMine","owner","deleteCard","filter"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Header} from './Header.js';\r\nimport {Main} from './Main.js';\r\nimport { PopupWithForm } from './PopupWithForm.js';\r\nimport {Footer} from './Footer.js';\r\nimport {ImagePopup} from './ImagePopup.js';\r\nimport {api} from \"../utils/Api.js\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\nimport { EditProfilePopup } from './EditProfilePopup.js';\r\nimport { EditAvatarPopup } from './EditAvatarPopup.js';\r\nimport {Card} from \"./Card.js\";\r\n\r\nfunction App() {\r\n// стейт перменные попапов\r\n  \r\nconst [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\nconst [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\nconst [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\nconst [selectedCard, setSelectedCard] = useState(null);\r\n\r\n// стейт с данными пользователя \r\n\r\nconst [currentUser, setCurrentUser] = useState({})\r\n\r\n// установка данных текущего пользователя \r\nuseEffect(() => {\r\n  api.getUserInfo()\r\n  .then(res => {\r\n    setCurrentUser(res)\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  })\r\n},[isEditProfilePopupOpen])\r\n\r\n// обработчики открытия попапов\r\n\r\nconst handleEditAvatarClick = () => {\r\n  setEditAvatarPopupOpen(true);\r\n}\r\n\r\nconst handleEditProfileClick = () => {\r\n  setEditProfilePopupOpen(true);\r\n}\r\n\r\nconst handleAddPlaceClick = () => {\r\n  setAddPlacePopupOpen(true);\r\n}\r\n\r\nconst handleCardClick  = (card) => {\r\n  setSelectedCard(card);\r\n}\r\n\r\n// хендлеры обновления данных пользователя \r\n\r\n const handleUpdateUser = (user) => {\r\n  api.editInfo(user.name, user.about)\r\n  .then(res => {\r\n    setCurrentUser(res)\r\n  })\r\n  .catch(err => {\r\n    console.log(err)\r\n  })\r\n  closeAllPopups();\r\n }\r\n\r\n const handleUpdateAvatar = (input) => {\r\n    api.changeAvatar(input.avatar)\r\n    .then(res => {\r\n      setCurrentUser(res)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    closeAllPopups();\r\n } \r\n\r\n// закрытие всех попапов\r\n\r\nconst closeAllPopups = () => {\r\n    setEditAvatarPopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setSelectedCard(null);\r\n}\r\n\r\n// закрытие попапов по эскейпу\r\n\r\nuseEffect(() => {\r\n  const handleEscClose = (e) => {\r\n    if (e.key === \"Escape\") {\r\n      closeAllPopups();\r\n    }\r\n  };\r\n\r\n  document.addEventListener(\"keydown\", handleEscClose);\r\n\r\n  return () => document.removeEventListener(\"keydown\", handleEscClose);\r\n}, []); \r\n\r\n // карточки\r\n\r\n const [cards, setCards] = useState([]);\r\n\r\n // загрузка карточек\r\n\r\n useEffect(() => {\r\n   api.getCards()\r\n   .then(res => {\r\n     setCards(res);\r\n   })\r\n   .catch((err) => {\r\n     console.log(err)\r\n   })\r\n }, [])\r\n\r\n // обработка массива с карточками\r\n\r\n function handleCardLike(card) {\r\n  // Снова проверяем, есть ли уже лайк на этой карточке\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  \r\n  // Отправляем запрос в API и получаем обновлённые данные карточки\r\n  api.changeLikeCardStatus(card._id, isLiked)\r\n  .then((newCard) => {\r\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n  });\r\n}\r\n\r\n const sectionWithCards = () => {\r\n   if (cards.length > 0) {\r\n     return cards.map((cardInfo) => (\r\n        <Card card={cardInfo} onCardLike={handleCardLike} onCardDelete={handleCardDelete} key={cardInfo._id} selectedCard={onCardClick} />\r\n     ));\r\n   }\r\n };\r\n \r\n // функция лайка карточки\r\n\r\n // функция удаления карточки\r\n\r\n function handleCardDelete(card) {\r\n   // проверяем являемся ли мы владельцем карточки\r\n   const isMine = card.owner._id === currentUser._id;\r\n\r\n   // отправляем запрос на удаление карточки\r\n   api.deleteCard(card._id, isMine)\r\n   .then(() => {\r\n     setCards((state) => state.filter((c) => c._id != card._id));\r\n   })\r\n }\r\n\r\n// вся разметка сайта\r\n\r\n  return (\r\n  <CurrentUserContext.Provider value={currentUser}>\r\n    <div className=\"page\">\r\n      <div className=\"page__size\">\r\n        <Header/>\r\n      <Main\r\n      onEditAvatar={handleEditAvatarClick}\r\n      onEditProfile={handleEditProfileClick}\r\n      onAddPlace={handleAddPlaceClick}\r\n      onCardClick={handleCardClick}\r\n      />\r\n      <Footer />\r\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n      <PopupWithForm\r\n      name=\"add\"\r\n      children={\r\n        <>\r\n          <ul className=\"popup__list\">\r\n            <li className=\"popup__list-element\">\r\n              <input type=\"text\" className=\"popup__data-box\" name=\"place-name\" required minLength=\"2\" maxLength=\"30\" placeholder=\"Название\"/>\r\n              <span className=\"popup__input-error\" id=\"place-name-error\"></span>\r\n            </li>\r\n            <li className=\"popup__list-element\">\r\n              <input type=\"url\" className=\"popup__data-box\" name=\"place-link\" required placeholder=\"Сылка на картинку\"/>\r\n              <span className=\"popup__input-error\" id=\"place-link-error\"></span>\r\n            </li>\r\n          </ul>\r\n        </>\r\n      }\r\n      isOpen={isAddPlacePopupOpen}\r\n      onClose={closeAllPopups}\r\n      title=\"Новое место\"/>\r\n      <ImagePopup\r\n        onClose={closeAllPopups}\r\n        card={selectedCard} />\r\n    </div>\r\n  </div>\r\n</CurrentUserContext.Provider>  \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}