{"ast":null,"code":"import _classCallCheck from\"C:/Users/hiksvalP/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/hiksvalP/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var AuthApi=/*#__PURE__*/function(){function AuthApi(_ref){var baseUrl=_ref.baseUrl;_classCallCheck(this,AuthApi);this._baseUrl=baseUrl;}_createClass(AuthApi,[{key:\"_getResponseData\",value:function _getResponseData(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}return res.json();}//регистрация\n},{key:\"signUp\",value:function signUp(email,password){var _this=this;console.log(email);return fetch(\"\".concat(this._baseUrl,\"/signup\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(function(res){return _this._getResponseData(res);});}// авторизация\n},{key:\"signIn\",value:function signIn(email,password){var _this2=this;return fetch(\"\".concat(this._baseUrl,\"/signin\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(function(res){return _this2._getResponseData(res);});}},{key:\"tokenCheck\",value:function tokenCheck(token){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(this._getResponseData);}}]);return AuthApi;}();export var authApi=new AuthApi({baseUrl:'https://auth.nomoreparties.co'});","map":{"version":3,"sources":["C:/Users/hiksvalP/react-mesto-auth/src/utils/authApi.js"],"names":["AuthApi","baseUrl","_baseUrl","res","ok","Promise","reject","status","json","email","password","console","log","fetch","method","headers","body","JSON","stringify","then","_getResponseData","token","authApi"],"mappings":"iPAAMA,CAAAA,O,yBACF,sBAAuB,IAAVC,CAAAA,OAAU,MAAVA,OAAU,+BACnB,KAAKC,QAAL,CAAgBD,OAAhB,CACH,C,oDAED,0BAAiBE,GAAjB,CAAsB,CAClB,GAAI,CAACA,GAAG,CAACC,EAAT,CAAa,CACT,MAAOC,CAAAA,OAAO,CAACC,MAAR,gDAAyBH,GAAG,CAACI,MAA7B,EAAP,CACH,CACD,MAAOJ,CAAAA,GAAG,CAACK,IAAJ,EAAP,CACH,CAED;sBACA,gBAAOC,KAAP,CAAcC,QAAd,CAAwB,gBACpBC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACA,MAAOI,CAAAA,KAAK,WAAI,KAAKX,QAAT,YAA4B,CACpCY,MAAM,CAAE,MAD4B,CAEpCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAF2B,CAKpCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACT,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CAL8B,CAA5B,CAAL,CAMJS,IANI,CAMC,SAAChB,GAAD,QAAS,CAAA,KAAI,CAACiB,gBAAL,CAAsBjB,GAAtB,CAAT,EAND,CAAP,CAOH,CAED;sBACA,gBAAOM,KAAP,CAAcC,QAAd,CAAwB,iBACpB,MAAOG,CAAAA,KAAK,WAAI,KAAKX,QAAT,YAA4B,CACpCY,MAAM,CAAE,MAD4B,CAEpCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAF2B,CAKpCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACT,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CAL8B,CAA5B,CAAL,CAMHS,IANG,CAME,SAAChB,GAAD,QAAS,CAAA,MAAI,CAACiB,gBAAL,CAAsBjB,GAAtB,CAAT,EANF,CAAP,CAOH,C,0BAED,oBAAWkB,KAAX,CAAkB,CACd,MAAOR,CAAAA,KAAK,WAAI,KAAKX,QAAT,cAA8B,CACtCY,MAAM,CAAE,KAD8B,CAEtCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,iCAA4BM,KAA5B,CAFK,CAF6B,CAA9B,CAAL,CAMHF,IANG,CAME,KAAKC,gBANP,CAAP,CAOH,C,uBAKL,MAAO,IAAME,CAAAA,OAAO,CAAG,GAAItB,CAAAA,OAAJ,CAAY,CAC/BC,OAAO,CAAE,+BADsB,CAAZ,CAAhB","sourcesContent":["class AuthApi {\r\n    constructor({baseUrl}) {\r\n        this._baseUrl = baseUrl;\r\n    }\r\n\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка ${res.status}`) \r\n        }\r\n        return res.json();\r\n    } \r\n\r\n    //регистрация\r\n    signUp(email, password) {\r\n        console.log(email)\r\n        return fetch(`${this._baseUrl}/signup`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            body: JSON.stringify({email, password})\r\n        }).then((res) => this._getResponseData(res))\r\n    }\r\n\r\n    // авторизация\r\n    signIn(email, password) {\r\n        return fetch(`${this._baseUrl}/signin`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            body: JSON.stringify({email, password})\r\n        }) .then((res) => this._getResponseData(res))\r\n    }\r\n\r\n    tokenCheck(token) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\" : `Bearer ${token}`\r\n            }\r\n        }) .then(this._getResponseData)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const authApi = new AuthApi({\r\n    baseUrl: 'https://auth.nomoreparties.co'\r\n})"]},"metadata":{},"sourceType":"module"}